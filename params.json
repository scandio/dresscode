{"name":"Dresscode","body":"Dresscode is a form-object based validation framework that is completely independent from your models.\r\n\r\n**NOTE: Dresscode is not fully implemented yet**\r\n\r\n\r\n\r\nExample\r\n----------\r\n\r\n### Define your Form\r\n\r\n    public interface ArticleForm() {\r\n\r\n    \t@Length(200)                                            // max length of 200\r\n        @Required                                               // requred\r\n        Field<String, TextValidator> getTitle();                // normal String input\r\n\r\n        Field<String, TextValidator> getContent();              // unrestricted\r\n\r\n        ListField<String, TextValidator> getCategories();       // multi select input\r\n\r\n        Field<Boolean, BooleanValidator> getSendToTwitter();    // checkbox\r\n\r\n        @Format(\"YYYY-MM-DD\")                                   // date format\r\n        Field<Date, DateValidator> getPublishDate();            // date field\r\n\r\n        @Required(3)                                            // minimum of 3 tags required\r\n        FieldList<String, TextValidator> getTags();             // list of strings\r\n\r\n        Field<String, EmailValidator> getEmail();               // Email\r\n\r\n        @Min(42) @Max(42)\r\n        Field<IntegerValidator> getAnswerToLifeTheUniverseAndEverything();\r\n    }\r\n\r\n\r\n### Usage in controller\r\n    public class ArticleController {\r\n\r\n    \t// create article action\r\n    \tpublic String createArticle(Request request) {\r\n    \t\t// crete a new article form\r\n    \t\tArticleForm form = Dresscode.create(ArticleForm.class);\r\n\r\n    \t\t// set category options\r\n    \t\tform.getCategories().setOptions(Categories.getAll());\r\n    \t\t// set the default selected category\r\n    \t\tform.getCategories().setValue(\"default\");\r\n\r\n    \t\treturn CoolTemplateEngine.render(\"createarticle.template\", form);\r\n    \t}\r\n\r\n    \t// save article action\r\n    \tpublic String saveArticle(Request request) {\r\n    \t\t// create an article form filled from request parameters\r\n    \t\tArticleForm form = Dresscode.fromRequest(ArticleForm.class, request);\r\n\r\n    \t\tif (form.isValid()) { // validate\r\n    \t\t\t// create article entity from form (not scope of Dresscode)\r\n    \t\t\tArticle article = entityManager.fromForm(Article.class, form);\r\n    \t\t\tarticle.save();\r\n    \t\t\treturn CoolTemplateEngine.render(\"success.template\");\r\n    \t\t} else {\r\n    \t\t\t// form has errors. return to sender.\r\n    \t\t\treturn CoolTemplateEngine.render(\"createarticle.template\", form);\r\n    \t\t}\r\n    \t}\r\n    }","tagline":"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}